{
  "openapi": "3.0.0",
  "info": {
    "title": "API",
    "description": "This is an API docs",
    "version": "1.0.0",
    "contact": {
      "email": "francescogmuller@hotmail.com"
    }
  },
  "paths": {
    "/categories": {
      "post": {
        "tags": ["Category"],
        "summary": "Create a new category",
        "description": "Create a new category",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created"
          },
          "400": {
            "description": "Category already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Category"],
        "summary": "List all categories",
        "description": "List all categories",
        "responses": {
          "200": {
            "description": "Categories found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/import": {
      "post": {
        "tags": ["Category"],
        "summary": "Import an new categories",
        "description": "Import an new categories",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Categories imported"
          }
        }
      }
    },
    "/specifications": {
      "post": {
        "tags": ["Specification"],
        "summary": "Create a new specification",
        "description": "Create a new specification",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSpecification"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Specification created"
          },
          "500": {
            "description": "Specification already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Specification"],
        "summary": "List all specifications",
        "description": "List all specifications",
        "responses": {
          "200": {
            "description": "Specifications found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Specification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": ["Session"],
        "summary": "Authenticate user",
        "description": "Authenticate user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "admin@rentx.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/SessionUser"
                    },
                    "token": {
                      "type": "string",
                      "example": "bearer f970e2767d0cfe75876ea857f92e319b"
                    },
                    "refresh_token": {
                      "type": "string",
                      "example": "f970e2767d0cfe75876ea857f92e319b"
                    }
                  }
                }
              }
            }
          },

          "400": {
            "description": "Email or password is incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/refresh-token": {
      "post": {
        "tags": ["Session"],
        "summary": "Refresh token",
        "description": "Refresh token",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": false,
            "schema": {
              "type": "string",
              "example": "f970e2767d0cfe75876ea857f92e319b"
            }
          },
          {
            "in": "header",
            "name": "x-access-token",
            "required": false,
            "schema": {
              "type": "string",
              "example": "f970e2767d0cfe75876ea857f92e319b"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "f970e2767d0cfe75876ea857f92e319b"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refresh_token": {
                      "type": "string",
                      "example": "f970e2767d0cfe75876ea857f92e319b"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Refresh token does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/cars": {
      "post": {
        "tags": ["Car"],
        "summary": "Create a new car",
        "description": "Create a new car",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCar"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Car created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "400": {
            "description": "Car already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/cars/available": {
      "get": {
        "tags": ["Car"],
        "summary": "List all available cars",
        "description": "List all available cars",
        "responses": {
          "200": {
            "description": "Cars found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Car"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/images/{id}": {
      "post": {
        "tags": ["Car"],
        "summary": "Upload car images",
        "description": "Upload car images",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "5e9f8f8f-c9c1-4b3f-b8e8-f9f8f8f8f8f8"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Car image uploaded"
          }
        }
      }
    },
    "/cars/specifications/{car_id}": {
      "post": {
        "tags": ["Car"],
        "summary": "Add car specification",
        "description": "Add car specification",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "car_id",
            "in": "path",
            "description": "Car id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "5e9f8f8f-c9c1-4b3f-b8e8-f9f8f8f8f8f8"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "specifications_id": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "5e9f8f8f-c9c1-4b3f-b8e8-f9f8f8f8f8f8"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Car specifications created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCarSpecification"
                }
              }
            }
          },
          "400": {
            "description": "Car specifications already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["User"],
        "summary": "Create a new user",
        "description": "Create a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "description": "User already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": ["User"],
        "summary": "Upload user avatar",
        "description": "Upload user avatar",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User avatar uploaded"
          }
        }
      }
    },
    "/rentals": {
      "post": {
        "tags": ["Rental"],
        "summary": "Create a new rental",
        "description": "Create a new rental",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRentalRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Rental created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRentalResponse"
                }
              }
            }
          },
          "400": {
            "description": "Rental error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RentalDateError"
                    },
                    {
                      "$ref": "#/components/schemas/RentalAlreadyExistsError"
                    },
                    {
                      "$ref": "#/components/schemas/RentalCarAlreadyRentedError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rentals/user": {
      "get": {
        "tags": ["Rental"],
        "summary": "Get rentals by user",
        "description": "Get rentals by user",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Rentals found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetRentalByUserResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rentals/devolution/{rental_id}": {
      "post": {
        "tags": ["Rental"],
        "summary": "Devolution of a rental",
        "description": "Devolution of a rental",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "rental_id",
            "in": "path",
            "description": "Rental id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "5e9f8f8f-c9c1-4b3f-b8e8-f9f8f8f8f8f8"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Rental devolution",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevolutionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Car already devolution",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevolutionRentalCarError"
                }
              }
            }
          },
          "403": {
            "description": "User does not have permission to devolution",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevolutionRentalPermissionError"
                }
              }
            }
          },
          "404": {
            "description": "Rental does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevolutionRentalNotExistsError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Sample error message"
          }
        }
      },
      "RentalDateError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Expected return date must be at least 24 hours from now"
          }
        }
      },
      "RentalAlreadyExistsError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Car already rented"
          }
        }
      },
      "RentalCarAlreadyRentedError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Car already rented"
          }
        }
      },
      "DevolutionRentalNotExistsError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Rental does not exists"
          }
        }
      },
      "DevolutionRentalPermissionError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User does not have permission to devolution"
          }
        }
      },
      "DevolutionRentalCarError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Car already devolution"
          }
        }
      },
      "Specification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d4f8f8f8-f8f8-f8f8-f8f8-f8f8f8f8f8f8"
          },
          "name": {
            "type": "string",
            "example": "Specification name sample"
          },
          "description": {
            "type": "string",
            "example": "Specification description sample"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2020-01-01T00:00:00.000Z"
          }
        }
      },
      "CreateSpecification": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Specification name sample"
          },
          "description": {
            "type": "string",
            "example": "Specification description sample"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d4f8f8f8-f8f8-f8f8-f8f8-f8f8f8f8f8f8"
          },
          "name": {
            "type": "string",
            "example": "Category name sample"
          },
          "description": {
            "type": "string",
            "example": "Category description sample"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2020-01-01T00:00:00.000Z"
          }
        }
      },
      "CreateCategory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Category name sample"
          },
          "description": {
            "type": "string",
            "example": "Category description sample"
          }
        }
      },
      "SessionUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Admin"
          },
          "email": {
            "type": "string",
            "example": "admin@rentx.com"
          },
          "is_admin": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "Car": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "e0204a0c-4b02-455d-8033-b5899bfd6e95"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z"
          },
          "available": {
            "type": "boolean",
            "example": true
          },
          "name": {
            "type": "string",
            "example": "Audi A1"
          },
          "description": {
            "type": "string",
            "example": "Audi A1 description"
          },
          "daily_rate": {
            "type": "number",
            "example": 100
          },
          "licence_plate": {
            "type": "string",
            "example": "ABC-1234"
          },
          "fine_amount": {
            "type": "number",
            "example": 40
          },
          "brand": {
            "type": "string",
            "example": "Audi"
          },
          "category_id": {
            "type": "string",
            "example": "6b48659b-4e67-4613-a85f-a2d50c18280d"
          }
        }
      },
      "CreateCar": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Audi A1"
          },
          "description": {
            "type": "string",
            "example": "An good car"
          },
          "daily_rate": {
            "type": "number",
            "example": 100
          },
          "licence_plate": {
            "type": "string",
            "example": "ABC-1234"
          },
          "fine_amount": {
            "type": "number",
            "example": 40
          },
          "brand": {
            "type": "string",
            "example": "Audi"
          },
          "category_id": {
            "type": "string",
            "example": "d4f8f8f8-f8f8-f8f8-f8f8-f8f8f8f8f8f8"
          }
        }
      },
      "CreateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Admin"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "johndoe@johndoe.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        }
      },
      "CreateCarSpecification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "e0204a0c-4b02-455d-8033-b5899bfd6e95"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z"
          },
          "available": {
            "type": "boolean",
            "example": true
          },
          "name": {
            "type": "string",
            "example": "Audi A1"
          },
          "description": {
            "type": "string",
            "example": "Audi A1 description"
          },
          "daily_rate": {
            "type": "string",
            "example": "100"
          },
          "licence_plate": {
            "type": "string",
            "example": "ABC-1234"
          },
          "fine_amount": {
            "type": "string",
            "example": "40"
          },
          "brand": {
            "type": "string",
            "example": "Audi"
          },
          "category_id": {
            "type": "string",
            "example": "d4f8f8f8-f8f8-f8f8-f8f8-f8f8f8f8f8f8"
          },
          "specifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Specification"
            }
          }
        }
      },
      "CreateRentalRequest": {
        "type": "object",
        "properties": {
          "car_id": {
            "type": "string",
            "example": "e0204a0c-4b02-455d-8033-b5899bfd6e95"
          },
          "expected_return_date": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z"
          }
        }
      },
      "CreateRentalResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "e0204a0c-4b02-455d-8033-b5899bfd6e95"
          },
          "user_id": {
            "type": "string",
            "example": "e0204a0c-4b02-455d-8033-b5899bfd6e95"
          },
          "car_id": {
            "type": "string",
            "example": "e0204a0c-4b02-455d-8033-b5899bfd6e95"
          },
          "expected_return_date": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z"
          }
        }
      },
      "GetRentalByUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "e0204a0c-4b02-455d-8033-b5899bfd6e95"
          },
          "user_id": {
            "type": "string",
            "example": "e0204a0c-4b02-455d-8033-b5899bfd6e95"
          },
          "car_id": {
            "type": "string",
            "example": "e0204a0c-4b02-455d-8033-b5899bfd6e95"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z | undefined"
          },
          "expected_return_date": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z"
          },
          "car": {
            "$ref": "#/components/schemas/Car"
          }
        }
      },
      "DevolutionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "e0204a0c-4b02-455d-8033-b5899bfd6e95"
          },
          "user_id": {
            "type": "string",
            "example": "e0204a0c-4b02-455d-8033-b5899bfd6e95"
          },
          "car_id": {
            "type": "string",
            "example": "e0204a0c-4b02-455d-8033-b5899bfd6e95"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z | undefined"
          },
          "total": {
            "type": "string",
            "example": 40
          },
          "expected_return_date": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-31T16:05:58.510Z"
          }
        }
      }
    }
  }
}
